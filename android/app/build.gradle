def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


// def keystorePropertiesFile = rootProject.file("key.properties")
// def keystoreProperties = new Properties()
// keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {

    //  signingConfigs {
    //     release {
    //         keyAlias 'caapps'  
    //         keyPassword 'mmasns'
    //         storeFile file('/Users/huangyisheng/Desktop/codes/keys/keys/20220727moldasanp') 
    //         storePassword 'mmasns'
    //     }
    // }

    // buildTypes {
    //     release {
    //         signingConfig signingConfigs.release
    //     }
    // }

    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        multiDexEnabled true
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_camera"
        minSdkVersion 19
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.multidex:multidex:2.0.1"
    api 'com.applovin:applovin-sdk:11.4.4'
    api 'com.applovin.mediation:adcolony-adapter:+'
    api 'com.applovin.mediation:inmobi-adapter:+'
    api 'com.squareup.picasso:picasso:2.71828'
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'com.applovin.mediation:facebook-adapter:+'
    api 'com.applovin.mediation:tapjoy-adapter:+'
    api 'com.applovin.mediation:vungle-adapter:+'
}
